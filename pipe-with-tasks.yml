# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

pool:
  vmImage: windows-latest

variables:
 buildConfiguration: 'Release'


steps:
- task: UseDotNet@2
  displayName: 'Installing .Net6'
  inputs:
    version: '6.x'

- task: DotNetCoreCLI@2
  displayName: 'Building App'
  inputs:
    command: 'build'
- task: DotNetCoreCLI@2
  displayName: 'Testing App'
  inputs:
    command: 'test'
    testRunTitle: 'Testing'

- task: DotNetCoreCLI@2
  displayName: 'packaging'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    configurationToPack: $(BuildConfiguration)
    outputDir: $(Build.ArtifactStagingDirectory)
    versioningScheme: 'off'

# -  task: ArchiveFiles@2
#    displayName: 'Archive files'
#   inputs:
#      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/'
#      includeRootFolder: false
#      archiveType: zip
#      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
#      replaceExistingArchive: false
      
# -  task: PublishBuildArtifacts@1
#    inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     ArtifactName: 'ACsharp-Zip'
#     publishLocation: 'Container'


- task: DotNetCoreCLI@2
  displayName: 'publishing'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# - task: PublishPipelineArtifact@1
#   displayName: 'Pushing out'
#   inputs:
#    targetPath: '$(Build.ArtifactStagingDirectory)' 
#    artifactName: 'CSharp-Build'